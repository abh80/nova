version: 2.1

executors:
  gradle-executor:
    docker:
      - image: gradle:8.4.0-jdk17-jammy

  node-executor:
    docker:
      - image: cimg/node:18.20.3

  git-executor:
    docker:
      - image: alpine/git:latest

  terraform-executor:
    docker:
      - image: hashicorp/terraform:latest

jobs:
  build:
    executor: gradle-executor
    steps:
      - checkout
      - run:
          name: Set GRADLE_USER_HOME
          command: |
            export GRADLE_USER_HOME=`pwd`/.gradle
      - run:
          name: Gradle Build
          command: gradle build -x test
      - save_cache:
          paths:
            - ~/.gradle
            - build
          key: gradle-cache-{{ .Branch }}-{{ checksum "build.gradle.kts" }}

  test:
    executor: gradle-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-cache-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - gradle-cache-{{ .Branch }}
            - gradle-cache
      - run:
          name: Gradle Test
          command: gradle test
      - save_cache:
          paths:
            - ~/.gradle
            - build
          key: gradle-cache-{{ .Branch }}-{{ checksum "build.gradle.kts" }}

  danger-bot:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Clone Danger Bot
          command: |
            git clone https://gitlab.com/platinum-open-source/flowops/danger-bot .
      - run:
          name: Install dependencies
          command: |
            npm install -g npx
            npm install
      - run:
          name: Run Danger
          command: npx danger ci

  sync-to-github:
    executor: git-executor
    steps:
      - checkout
      - run:
          name: Push to GitHub
          command: |
            git config --global user.email "${GIT_EMAIL}"
            git config --global user.name "${GIT_NAME}"
            git remote add github https://${USER_BOT_GITHUB_TOKEN}@github.com/${GITHUB_REPO_TO_SYNC}.git
            git push github ${CIRCLE_BRANCH}

  lint-terraform:
    executor: terraform-executor
    steps:
      - checkout
      - run:
          name: Terraform Validate
          command: |
            ./ci/scripts/validate_tf_files
      - run:
          name: Terraform Lint
          command: |
            terraform fmt -check=true -recursive

  lint-scala:
    executor: gradle-executor
    steps:
      - checkout
      - run:
          name: Scala Lint
          command: |
            curl -x -o /usr/local/share/coursier https://github.com/coursier/launchers/raw/master/coursier
            chmod +x /usr/local/share/coursier
            /usr/local/share/coursier setup
            /usr/local/share/coursier install scalafmt
            scalafmt --test
  
  

workflows:
  pipeline:
    jobs:
      - build
      - lint-terraform
      - lint-scala
      - test:
          requires:
            - build
      - sync-to-github:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - dev
